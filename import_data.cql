// —— 创建唯一约束 ——
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Reason) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Frequency) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Level) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Duration) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Method) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Level) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_Value) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Level) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:ADE) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Frequency) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Level) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Level) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Class) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Anatomy) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Pathogenesis) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Drug) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Disease) ASSERT n.id IS UNIQUE;
CREATE CONSTRAINT IF NOT EXISTS ON (n:Test_items) ASSERT n.id IS UNIQUE;

// —— MERGE 所有节点 ——
MERGE (n:Disease {id: 'T0', name: '2型糖尿病'});
MERGE (n:Class {id: 'T1', name: '2型'});
MERGE (n:Drug {id: 'T2', name: '胰岛素促泌剂'});
MERGE (n:Disease {id: 'T3', name: '糖尿病'});
MERGE (n:Disease {id: 'T4', name: '糖尿病'});
MERGE (n:Test_items {id: 'T5', name: 'HbA1c'});
MERGE (n:Test_items {id: 'T6', name: 'HbA1c'});
MERGE (n:Test_Value {id: 'T7', name: '≤7%'});
MERGE (n:Disease {id: 'T8', name: '2型糖尿病'});
MERGE (n:Class {id: 'T9', name: '2型'});
MERGE (n:Disease {id: 'T10', name: '2型糖尿病'});
MERGE (n:Class {id: 'T11', name: '2型'});
MERGE (n:Pathogenesis {id: 'T12', name: 'β细胞胰岛素分泌功能下降比胰岛素敏感性降低更明显'});
MERGE (n:Disease {id: 'T13', name: '糖尿病肾病'});
MERGE (n:Anatomy {id: 'T14', name: '肾'});
MERGE (n:Disease {id: 'T15', name: '2型糖尿病'});
MERGE (n:Class {id: 'T16', name: '2型'});
MERGE (n:Disease {id: 'T17', name: '血管病变'});
MERGE (n:Anatomy {id: 'T18', name: '血管'});
MERGE (n:Disease {id: 'T19', name: '糖尿病'});
MERGE (n:Drug {id: 'T20', name: '胰岛素促泌剂'});
MERGE (n:Disease {id: 'T21', name: '2型糖尿病'});
MERGE (n:Class {id: 'T22', name: '2型'});
MERGE (n:Disease {id: 'T23', name: '糖尿病'});
MERGE (n:Disease {id: 'T24', name: '糖尿病'});
MERGE (n:Disease {id: 'T25', name: '心血管疾病'});
MERGE (n:Anatomy {id: 'T26', name: '心血管'});
MERGE (n:Drug {id: 'T27', name: '磺脲类促泌剂'});
MERGE (n:Disease {id: 'T28', name: '2型糖尿病'});
MERGE (n:Class {id: 'T29', name: '2型'});
MERGE (n:Disease {id: 'T30', name: '糖尿病'});
MERGE (n:Anatomy {id: 'T31', name: '血管'});
MERGE (n:Drug {id: 'T32', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T33', name: '胰岛素促泌剂'});
MERGE (n:Disease {id: 'T34', name: '2型糖尿病'});
MERGE (n:Class {id: 'T35', name: '2型'});
MERGE (n:Drug {id: 'T36', name: '胰岛素促泌剂'});
MERGE (n:Disease {id: 'T37', name: '2型糖尿病'});
MERGE (n:Class {id: 'T38', name: '2型'});
MERGE (n:Anatomy {id: 'T39', name: '血管'});
MERGE (n:Test_items {id: 'T40', name: '血糖'});
MERGE (n:Disease {id: 'T41', name: '糖尿病'});
MERGE (n:Disease {id: 'T42', name: '2型糖尿病'});
MERGE (n:Class {id: 'T43', name: '2型'});
MERGE (n:Pathogenesis {id: 'T44', name: '胰岛素抵抗'});
MERGE (n:Pathogenesis {id: 'T45', name: 'β细胞胰岛素分泌缺陷'});
MERGE (n:Disease {id: 'T46', name: '2型糖尿病'});
MERGE (n:Class {id: 'T47', name: '2型'});
MERGE (n:Reason {id: 'T48', name: '胰岛素抵抗'});
MERGE (n:Disease {id: 'T49', name: '2型糖尿病'});
MERGE (n:Class {id: 'T50', name: '2型'});
MERGE (n:Disease {id: 'T51', name: '2型糖尿病'});
MERGE (n:Class {id: 'T52', name: '2型'});
MERGE (n:Pathogenesis {id: 'T53', name: 'β细胞胰岛素分泌功能缺陷'});
MERGE (n:Disease {id: 'T54', name: '2型糖尿病'});
MERGE (n:Class {id: 'T55', name: '2型'});
MERGE (n:Disease {id: 'T56', name: '糖尿病'});
MERGE (n:Pathogenesis {id: 'T57', name: 'β细胞胰岛素分泌功能已开始逐渐下降'});
MERGE (n:Disease {id: 'T58', name: '2型糖尿病'});
MERGE (n:Class {id: 'T59', name: '2型'});
MERGE (n:Pathogenesis {id: 'T60', name: '胰岛素抵抗'});
MERGE (n:Pathogenesis {id: 'T61', name: '胰岛素分泌缺陷'});
MERGE (n:Pathogenesis {id: 'T62', name: '胰岛素分泌缺陷'});
MERGE (n:Pathogenesis {id: 'T63', name: '胰岛素抵抗'});
MERGE (n:Disease {id: 'T64', name: '2型糖尿病'});
MERGE (n:Class {id: 'T65', name: '2型'});
MERGE (n:Pathogenesis {id: 'T66', name: '空腹血糖水平增高'});
MERGE (n:Pathogenesis {id: 'T67', name: '胰岛素分泌功能的下降较胰岛素敏感性降低更明显'});
MERGE (n:Disease {id: 'T68', name: '肥胖'});
MERGE (n:Disease {id: 'T69', name: '2型糖尿病'});
MERGE (n:Class {id: 'T70', name: '2型'});
MERGE (n:Pathogenesis {id: 'T71', name: '胰岛素分泌功能更差'});
MERGE (n:Disease {id: 'T72', name: '2型糖尿病'});
MERGE (n:Class {id: 'T73', name: '2型'});
MERGE (n:Pathogenesis {id: 'T74', name: 'β细胞胰岛素分泌功能的异常'});
MERGE (n:Drug {id: 'T75', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T76', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T77', name: '磺脲类'});
MERGE (n:Drug {id: 'T78', name: '格列奈类'});
MERGE (n:Drug {id: 'T79', name: '磺脲类促泌剂'});
MERGE (n:Drug {id: 'T80', name: '短效促泌剂'});
MERGE (n:Drug {id: 'T81', name: '格列吡嗪'});
MERGE (n:Drug {id: 'T82', name: '格列喹酮'});
MERGE (n:Drug {id: 'T83', name: '中长效促泌剂'});
MERGE (n:Drug {id: 'T84', name: '格列美脲'});
MERGE (n:Drug {id: 'T85', name: '格列本脲'});
MERGE (n:Drug {id: 'T86', name: '格列齐特'});
MERGE (n:Drug {id: 'T87', name: '格列吡嗪控释片'});
MERGE (n:Drug {id: 'T88', name: '格列齐特缓释片'});
MERGE (n:Drug {id: 'T89', name: '格列奈类促泌剂'});
MERGE (n:Drug {id: 'T90', name: '瑞格列奈'});
MERGE (n:Drug {id: 'T91', name: '那格列奈'});
MERGE (n:Drug {id: 'T92', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T93', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T94', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T95', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T96', name: '胰岛素'});
MERGE (n:Drug {id: 'T97', name: '磺脲类促泌剂'});
MERGE (n:Drug {id: 'T98', name: '磺脲类促泌剂'});
MERGE (n:Test_items {id: 'T99', name: '血糖'});
MERGE (n:Test_items {id: 'T100', name: '空腹血糖'});
MERGE (n:Drug {id: 'T101', name: '磺脲类促泌剂'});
MERGE (n:Drug {id: 'T102', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T103', name: '胰岛素促泌剂'});
MERGE (n:Test_items {id: 'T104', name: 'HbA1c'});
MERGE (n:Test_Value {id: 'T105', name: '越高'});
MERGE (n:Drug {id: 'T106', name: '胰岛素促泌剂'});
MERGE (n:Test_items {id: 'T107', name: 'HbA1c'});
MERGE (n:Test_Value {id: 'T108', name: '降低幅度越大'});
MERGE (n:Test_items {id: 'T109', name: 'HbA1c'});
MERGE (n:Test_Value {id: 'T110', name: '2%左右'});
MERGE (n:Test_Value {id: 'T111', name: '降低2%以上'});
MERGE (n:Drug {id: 'T112', name: '那格列奈'});
MERGE (n:Drug {id: 'T113', name: '磺脲类促泌剂'});
MERGE (n:Drug {id: 'T114', name: '磺脲类促泌剂'});
MERGE (n:Drug {id: 'T115', name: '短效促泌剂'});
MERGE (n:Drug {id: 'T116', name: '短效磺脲类'});
MERGE (n:Drug {id: 'T117', name: '格列奈类促泌剂'});
MERGE (n:Disease {id: 'T118', name: '2型糖尿病'});
MERGE (n:Class {id: 'T119', name: '2型'});
MERGE (n:Drug {id: 'T120', name: '格列喹酮'});
MERGE (n:Drug {id: 'T121', name: '格列吡嗪'});
MERGE (n:Drug {id: 'T122', name: '瑞格列奈'});
MERGE (n:Drug {id: 'T123', name: '那格列奈'});
MERGE (n:Test_items {id: 'T124', name: '餐后血糖'});
MERGE (n:ADE {id: 'T125', name: '严重低血糖'});
MERGE (n:ADE {id: 'T126', name: '低血糖'});
MERGE (n:Test_items {id: 'T127', name: '24h血糖'});
MERGE (n:Drug {id: 'T128', name: '中长效促泌剂'});
MERGE (n:Drug {id: 'T129', name: '中长效磺脲类促泌剂'});
MERGE (n:Disease {id: 'T130', name: '2型糖尿病'});
MERGE (n:Class {id: 'T131', name: '2型'});
MERGE (n:Test_items {id: 'T132', name: '空腹和餐后血糖'});
MERGE (n:Drug {id: 'T133', name: '普通剂型磺脲类促泌剂'});
MERGE (n:Drug {id: 'T134', name: '格列本脲'});
MERGE (n:Drug {id: 'T135', name: '格列美脲'});
MERGE (n:Drug {id: 'T136', name: '格列齐特缓释片'});
MERGE (n:Drug {id: 'T137', name: '格列吡嗪控释片'});
MERGE (n:Drug {id: 'T138', name: '格列本脲'});
MERGE (n:ADE {id: 'T139', name: '低血糖'});
MERGE (n:Drug {id: 'T140', name: '格列美脲'});
MERGE (n:Drug {id: 'T141', name: '格列本脲'});
MERGE (n:ADE {id: 'T142', name: '低血糖'});
MERGE (n:Test_items {id: 'T143', name: '血糖'});
MERGE (n:Drug {id: 'T144', name: '格列美脲'});
MERGE (n:Drug {id: 'T145', name: '格列本脲'});
MERGE (n:Drug {id: 'T146', name: '格列齐特缓释片'});
MERGE (n:Disease {id: 'T147', name: '2型糖尿病'});
MERGE (n:Class {id: 'T148', name: '2型'});
MERGE (n:Drug {id: 'T149', name: '格列吡嗪控释片'});
MERGE (n:Test_items {id: 'T150', name: '空腹及餐后胰岛素'});
MERGE (n:Test_items {id: 'T151', name: 'C肽水平'});
MERGE (n:Drug {id: 'T152', name: '格列奈类促泌剂'});
MERGE (n:Drug {id: 'T153', name: '格列奈类促泌剂'});
MERGE (n:Test_items {id: 'T154', name: '餐后血糖'});
MERGE (n:ADE {id: 'T155', name: '低血糖'});
MERGE (n:Frequency {id: 'T156', name: '1日多次'});
MERGE (n:Disease {id: 'T157', name: '大血管并发症'});
MERGE (n:Anatomy {id: 'T158', name: '微血管'});
MERGE (n:Anatomy {id: 'T159', name: '大血管'});
MERGE (n:Anatomy {id: 'T160', name: '大血管'});
MERGE (n:Disease {id: 'T161', name: '2型糖尿病'});
MERGE (n:Class {id: 'T162', name: '2型'});
MERGE (n:Drug {id: 'T163', name: '格列本脲'});
MERGE (n:Drug {id: 'T164', name: '氯磺丙脲'});
MERGE (n:Disease {id: 'T165', name: '心肌梗死'});
MERGE (n:Anatomy {id: 'T166', name: '心肌'});
MERGE (n:Drug {id: 'T167', name: '格列齐特缓释片'});
MERGE (n:Test_items {id: 'T168', name: 'HbA1c'});
MERGE (n:Test_Value {id: 'T169', name: '降至6.5%'});
MERGE (n:Anatomy {id: 'T170', name: '心血管'});
MERGE (n:Level {id: 'T171', name: '微量'});
MERGE (n:Disease {id: 'T172', name: '白蛋白尿'});
MERGE (n:Disease {id: 'T173', name: '超重'});
MERGE (n:Disease {id: 'T174', name: '2型糖尿病'});
MERGE (n:Class {id: 'T175', name: '2型'});
MERGE (n:Drug {id: 'T176', name: '格列齐特'});
MERGE (n:Disease {id: 'T177', name: '心血管疾病'});
MERGE (n:Anatomy {id: 'T178', name: '心血管'});
MERGE (n:Drug {id: 'T179', name: '氯磺丙脲'});
MERGE (n:Drug {id: 'T180', name: '格列本脲'});
MERGE (n:Drug {id: 'T181', name: '格列齐特缓释片'});
MERGE (n:Disease {id: 'T182', name: '2型糖尿病'});
MERGE (n:Class {id: 'T183', name: '2型'});
MERGE (n:Disease {id: 'T184', name: '非致死性心肌梗死'});
MERGE (n:Class {id: 'T185', name: '非致死性'});
MERGE (n:Anatomy {id: 'T186', name: '心肌'});
MERGE (n:Disease {id: 'T187', name: '冠心病'});
MERGE (n:Duration {id: 'T188', name: '5年'});
MERGE (n:Disease {id: 'T189', name: '糖尿病'});
MERGE (n:Disease {id: 'T190', name: '心脏病'});
MERGE (n:Anatomy {id: 'T191', name: '心脏'});
MERGE (n:Disease {id: 'T192', name: '卒中'});
MERGE (n:Disease {id: 'T193', name: '心脑血管疾病'});
MERGE (n:Anatomy {id: 'T194', name: '心脑血管'});
MERGE (n:Disease {id: 'T195', name: '糖尿病'});
MERGE (n:Disease {id: 'T196', name: '糖尿病'});
MERGE (n:Disease {id: 'T197', name: '心血管疾病'});
MERGE (n:Anatomy {id: 'T198', name: '心血管'});
MERGE (n:Disease {id: 'T199', name: '肾病'});
MERGE (n:Anatomy {id: 'T200', name: '肾'});
MERGE (n:Disease {id: 'T201', name: '感染'});
MERGE (n:Disease {id: 'T202', name: '癌症'});
MERGE (n:Disease {id: 'T203', name: '老年痴呆症'});
MERGE (n:Disease {id: 'T204', name: '慢性阻塞性肺疾病'});
MERGE (n:Class {id: 'T205', name: '慢性阻塞性'});
MERGE (n:Anatomy {id: 'T206', name: '肺'});
MERGE (n:Disease {id: 'T207', name: '神经系统疾病'});
MERGE (n:Anatomy {id: 'T208', name: '神经'});
MERGE (n:Disease {id: 'T209', name: '糖尿病'});
MERGE (n:Drug {id: 'T210', name: '格列齐特缓释片'});
MERGE (n:Drug {id: 'T211', name: '格列本脲'});
MERGE (n:Drug {id: 'T212', name: '氯磺丙脲'});
MERGE (n:Disease {id: 'T213', name: '低血糖'});
MERGE (n:Drug {id: 'T214', name: '磺脲类促泌剂'});
MERGE (n:ADE {id: 'T215', name: '低血糖'});
MERGE (n:Drug {id: 'T216', name: '格列奈类'});
MERGE (n:Drug {id: 'T217', name: '格列美脲'});
MERGE (n:ADE {id: 'T218', name: '低血糖'});
MERGE (n:Test_items {id: 'T219', name: '血糖'});
MERGE (n:Drug {id: 'T220', name: '磺脲类促泌剂'});
MERGE (n:ADE {id: 'T221', name: '低血糖'});
MERGE (n:Drug {id: 'T222', name: '格列齐特缓释片'});
MERGE (n:ADE {id: 'T223', name: '严重低血糖'});
MERGE (n:Drug {id: 'T224', name: '格列本脲'});
MERGE (n:Drug {id: 'T225', name: '氯磺丙脲'});
MERGE (n:Drug {id: 'T226', name: '胰岛素促泌剂'});
MERGE (n:Disease {id: 'T227', name: '糖尿病'});
MERGE (n:Drug {id: 'T228', name: '胰岛素促泌剂'});
MERGE (n:Test_items {id: 'T229', name: '血糖'});
MERGE (n:ADE {id: 'T230', name: '低血糖'});
MERGE (n:Disease {id: 'T231', name: '肥胖'});
MERGE (n:Disease {id: 'T232', name: '心脑血管疾病'});
MERGE (n:Anatomy {id: 'T233', name: '心脑血管'});
MERGE (n:Drug {id: 'T234', name: '磺脲类药物'});
MERGE (n:ADE {id: 'T235', name: '体重增加'});
MERGE (n:Drug {id: 'T236', name: '格列本脲'});
MERGE (n:ADE {id: 'T237', name: '体重增加'});
MERGE (n:Drug {id: 'T238', name: '格列齐特缓释片'});
MERGE (n:Drug {id: 'T239', name: '磺脲类促泌剂'});
MERGE (n:Drug {id: 'T240', name: '格列奈类'});
MERGE (n:Drug {id: 'T241', name: '格列美脲'});
MERGE (n:Drug {id: 'T242', name: '格列本脲'});
MERGE (n:Drug {id: 'T243', name: '氯磺丙脲'});
MERGE (n:Drug {id: 'T244', name: '二甲双胍'});
MERGE (n:Disease {id: 'T245', name: '糖尿病'});
MERGE (n:Drug {id: 'T246', name: '罗格列酮'});
MERGE (n:Drug {id: 'T247', name: '格列本脲'});
MERGE (n:Drug {id: 'T248', name: '二甲双胍'});
MERGE (n:Disease {id: 'T249', name: '2型糖尿病'});
MERGE (n:Class {id: 'T250', name: '2型'});
MERGE (n:Drug {id: 'T251', name: '格列本脲'});
MERGE (n:Drug {id: 'T252', name: '罗格列酮'});
MERGE (n:Drug {id: 'T253', name: '二甲双胍'});
MERGE (n:Drug {id: 'T254', name: '磺脲类胰岛素促泌剂'});
MERGE (n:Disease {id: 'T255', name: '2型糖尿病'});
MERGE (n:Class {id: 'T256', name: '2型'});
MERGE (n:Drug {id: 'T257', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T258', name: '格列齐特缓释片'});
MERGE (n:Disease {id: 'T259', name: '糖尿病'});
MERGE (n:ADE {id: 'T260', name: '心血管死亡风险'});
MERGE (n:Disease {id: 'T261', name: '2型糖尿病'});
MERGE (n:Class {id: 'T262', name: '2型'});
MERGE (n:Drug {id: 'T263', name: '甲苯磺丁脲'});
MERGE (n:Drug {id: 'T264', name: '格列本脲'});
MERGE (n:Drug {id: 'T265', name: '格列齐特缓释片'});
MERGE (n:Drug {id: 'T266', name: '胰岛素促泌剂'});
MERGE (n:ADE {id: 'T267', name: '头晕'});
MERGE (n:ADE {id: 'T268', name: '乏力'});
MERGE (n:ADE {id: 'T269', name: '头痛'});
MERGE (n:ADE {id: 'T270', name: '皮疹'});
MERGE (n:ADE {id: 'T271', name: '恶心'});
MERGE (n:ADE {id: 'T272', name: '胃肠道不良反应'});
MERGE (n:ADE {id: 'T273', name: '呕吐'});
MERGE (n:ADE {id: 'T274', name: '腹痛'});
MERGE (n:ADE {id: 'T275', name: '腹泻'});
MERGE (n:Drug {id: 'T276', name: '格列美脲'});
MERGE (n:Drug {id: 'T277', name: '格列奈类'});
MERGE (n:Drug {id: 'T278', name: '磺脲类促泌剂'});
MERGE (n:Drug {id: 'T279', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T280', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T281', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T282', name: '胰岛素促泌剂'});
MERGE (n:Disease {id: 'T283', name: '2型糖尿病'});
MERGE (n:Class {id: 'T284', name: '2型'});
MERGE (n:Drug {id: 'T285', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T286', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T287', name: '二甲双胍'});
MERGE (n:Disease {id: 'T288', name: '2型糖尿病'});
MERGE (n:Class {id: 'T289', name: '2型'});
MERGE (n:Disease {id: 'T290', name: '2型糖尿病'});
MERGE (n:Class {id: 'T291', name: '2型'});
MERGE (n:Test_items {id: 'T292', name: '血糖'});
MERGE (n:Method {id: 'T293', name: '口服'});
MERGE (n:Disease {id: 'T294', name: '2型糖尿病'});
MERGE (n:Class {id: 'T295', name: '2型'});
MERGE (n:Test_Value {id: 'T296', name: '控制不佳'});
MERGE (n:Drug {id: 'T297', name: '胰岛素促泌剂'});
MERGE (n:Disease {id: 'T298', name: '药物过敏'});
MERGE (n:Disease {id: 'T299', name: '1型糖尿病'});
MERGE (n:Class {id: 'T300', name: '1型'});
MERGE (n:Disease {id: 'T301', name: '糖尿病酮症酸中毒'});
MERGE (n:Disease {id: 'T302', name: '高糖性高渗透压综合征'});
MERGE (n:Disease {id: 'T303', name: '严重肝或肾损伤'});
MERGE (n:Anatomy {id: 'T304', name: '肝'});
MERGE (n:Anatomy {id: 'T305', name: '肾'});
MERGE (n:Drug {id: 'T306', name: '噻唑烷二酮类药物'});
MERGE (n:Drug {id: 'T307', name: 'α-糖苷酶抑制剂'});
MERGE (n:Drug {id: 'T308', name: '双胍类'});
MERGE (n:Test_items {id: 'T309', name: '血糖'});
MERGE (n:Test_Value {id: 'T310', name: '控制不佳'});
MERGE (n:Disease {id: 'T311', name: '2型糖尿病'});
MERGE (n:Class {id: 'T312', name: '2型'});
MERGE (n:Drug {id: 'T313', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T314', name: '胰岛素促泌剂'});
MERGE (n:Test_items {id: 'T315', name: '血糖'});
MERGE (n:Test_Value {id: 'T316', name: '得不到有效控制'});
MERGE (n:Drug {id: 'T317', name: '胰岛素'});
MERGE (n:Drug {id: 'T318', name: '磺脲类促泌剂'});
MERGE (n:Drug {id: 'T319', name: '格列奈类促泌剂'});
MERGE (n:Test_items {id: 'T320', name: '血糖'});
MERGE (n:Drug {id: 'T321', name: '胰岛素促泌剂'});
MERGE (n:Test_items {id: 'T322', name: '血糖'});
MERGE (n:Drug {id: 'T323', name: '胰岛素促泌剂'});
MERGE (n:Test_items {id: 'T324', name: '餐后血糖(PPG)'});
MERGE (n:Test_Value {id: 'T325', name: '升高'});
MERGE (n:Drug {id: 'T326', name: '格列吡嗪'});
MERGE (n:Drug {id: 'T327', name: '格列奈类促泌剂'});
MERGE (n:Test_items {id: 'T328', name: '空腹血糖(FPG)'});
MERGE (n:Test_Value {id: 'T329', name: '升高'});
MERGE (n:ADE {id: 'T330', name: '低血糖'});
MERGE (n:Drug {id: 'T331', name: '中长效磺脲类促泌剂'});
MERGE (n:Test_items {id: 'T332', name: '餐后血糖'});
MERGE (n:Test_items {id: 'T333', name: '空腹血糖'});
MERGE (n:Test_Value {id: 'T334', name: '升高'});
MERGE (n:ADE {id: 'T335', name: '低血糖'});
MERGE (n:Drug {id: 'T336', name: '中长效磺脲类促泌剂'});
MERGE (n:Disease {id: 'T337', name: '糖尿病'});
MERGE (n:Level {id: 'T338', name: '严重'});
MERGE (n:Disease {id: 'T339', name: '低血糖'});
MERGE (n:Drug {id: 'T340', name: '格列奈类促泌剂'});
MERGE (n:ADE {id: 'T341', name: '低血糖'});
MERGE (n:Drug {id: 'T342', name: '磺脲类促泌剂'});
MERGE (n:Drug {id: 'T343', name: '胰岛素促泌剂'});
MERGE (n:Disease {id: 'T344', name: '低血糖'});
MERGE (n:Disease {id: 'T345', name: '糖尿病'});
MERGE (n:Disease {id: 'T346', name: '低血糖'});
MERGE (n:Disease {id: 'T347', name: '肝肾功能不全'});
MERGE (n:Anatomy {id: 'T348', name: '肝'});
MERGE (n:Anatomy {id: 'T349', name: '肾'});
MERGE (n:Test_items {id: 'T350', name: '血糖'});
MERGE (n:Test_Value {id: 'T351', name: '波动较大'});
MERGE (n:Disease {id: 'T352', name: '低血糖'});
MERGE (n:Drug {id: 'T353', name: '胰岛素促泌剂治'});
MERGE (n:Drug {id: 'T354', name: '格列奈类促泌剂'});
MERGE (n:ADE {id: 'T355', name: '低血糖'});
MERGE (n:Drug {id: 'T356', name: '磺脲类促泌剂'});
MERGE (n:Disease {id: 'T357', name: '妊娠期糖尿病'});
MERGE (n:Class {id: 'T358', name: '妊娠期'});
MERGE (n:Disease {id: 'T359', name: '妊娠期显性糖尿病'});
MERGE (n:Class {id: 'T360', name: '妊娠期显性'});
MERGE (n:Disease {id: 'T361', name: '孕前2型糖尿病'});
MERGE (n:Class {id: 'T362', name: '2型'});
MERGE (n:Drug {id: 'T363', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T364', name: '胰岛素促泌剂'});
MERGE (n:Disease {id: 'T365', name: '中度肾功能不全'});
MERGE (n:Level {id: 'T366', name: '中度'});
MERGE (n:Anatomy {id: 'T367', name: '肾'});
MERGE (n:Drug {id: 'T368', name: '胰岛素'});
MERGE (n:Drug {id: 'T369', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T370', name: '瑞格列奈'});
MERGE (n:Drug {id: 'T371', name: '格列喹酮'});
MERGE (n:Drug {id: 'T372', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T373', name: '胰岛素'});
MERGE (n:Drug {id: 'T374', name: '胰岛素促泌剂'});
MERGE (n:ADE {id: 'T375', name: '低血糖'});
MERGE (n:Frequency {id: 'T376', name: '1日1次'});
MERGE (n:Drug {id: 'T377', name: '磺脲类促泌剂'});
MERGE (n:Drug {id: 'T378', name: '胰岛素促泌剂'});
MERGE (n:Disease {id: 'T379', name: '2型糖尿病'});
MERGE (n:Class {id: 'T380', name: '2型'});
MERGE (n:Disease {id: 'T381', name: '2型糖尿病'});
MERGE (n:Class {id: 'T382', name: '2型'});
MERGE (n:Disease {id: 'T383', name: '2型糖尿病'});
MERGE (n:Class {id: 'T384', name: '2型'});
MERGE (n:Disease {id: 'T385', name: '糖尿病肾病'});
MERGE (n:Anatomy {id: 'T386', name: '肾'});
MERGE (n:Pathogenesis {id: 'T387', name: 'β细胞胰岛素分泌功能比胰岛素敏感性降低更明显'});
MERGE (n:Drug {id: 'T388', name: '胰岛素促泌剂'});
MERGE (n:Disease {id: 'T389', name: '2型糖尿病'});
MERGE (n:Class {id: 'T390', name: '2型'});
MERGE (n:Drug {id: 'T391', name: '磺脲类药物'});
MERGE (n:Test_items {id: 'T392', name: 'HbA1c'});
MERGE (n:Anatomy {id: 'T393', name: '微血管'});
MERGE (n:Anatomy {id: 'T394', name: '大血管'});
MERGE (n:Drug {id: 'T395', name: '格列奈类'});
MERGE (n:Test_items {id: 'T396', name: '餐后血糖'});
MERGE (n:Drug {id: 'T397', name: '胰岛素促泌剂'});
MERGE (n:Drug {id: 'T398', name: '氯磺丙脲'});
MERGE (n:Drug {id: 'T399', name: '格列本脲'});
MERGE (n:Disease {id: 'T400', name: '2型糖尿病'});
MERGE (n:Class {id: 'T401', name: '2型'});
MERGE (n:Anatomy {id: 'T402', name: '微血管'});
MERGE (n:Disease {id: 'T403', name: '视网膜病变'});
MERGE (n:Anatomy {id: 'T404', name: '视网膜'});
MERGE (n:Level {id: 'T405', name: '微量'});
MERGE (n:Disease {id: 'T406', name: '白蛋白尿'});
MERGE (n:Level {id: 'T407', name: '大量'});
MERGE (n:Disease {id: 'T408', name: '白蛋白尿'});
MERGE (n:Anatomy {id: 'T409', name: '心血管'});
MERGE (n:Disease {id: 'T410', name: '2型糖尿病'});
MERGE (n:Class {id: 'T411', name: '2型'});
MERGE (n:Drug {id: 'T412', name: '格列齐特缓释片'});
MERGE (n:Disease {id: 'T413', name: '微血管事件'});
MERGE (n:Anatomy {id: 'T414', name: '微血管'});
MERGE (n:Disease {id: 'T415', name: '肾脏事件'});
MERGE (n:Anatomy {id: 'T416', name: '肾脏'});
MERGE (n:Anatomy {id: 'T417', name: '微血管'});
MERGE (n:Pathogenesis {id: 'T418', name: '胰岛素分泌缺陷'});
MERGE (n:Pathogenesis {id: 'T419', name: '胰岛素抵抗'});
MERGE (n:Pathogenesis {id: 'T420', name: '能量摄取'});
MERGE (n:Drug {id: 'T421', name: '胰岛素促泌剂'});
MERGE (n:Disease {id: 'T422', name: '糖尿病'});
MERGE (n:Test_items {id: 'T423', name: '血糖'});

// —— MERGE 所有关系 ——

MATCH (a {id: 'T2'}), (b {id: 'T0'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T1'}), (b {id: 'T0'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T5'}), (b {id: 'T8'})
MERGE (a)-[r:Test_items_Disease]->(b);

MATCH (a {id: 'T6'}), (b {id: 'T8'})
MERGE (a)-[r:Test_items_Disease]->(b);

MATCH (a {id: 'T9'}), (b {id: 'T8'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T11'}), (b {id: 'T10'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T12'}), (b {id: 'T10'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T14'}), (b {id: 'T13'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T16'}), (b {id: 'T15'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T18'}), (b {id: 'T15'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T39'}), (b {id: 'T17'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T20'}), (b {id: 'T21'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T22'}), (b {id: 'T21'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T26'}), (b {id: 'T25'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T27'}), (b {id: 'T28'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T29'}), (b {id: 'T28'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T40'}), (b {id: 'T28'})
MERGE (a)-[r:Test_items_Disease]->(b);

MATCH (a {id: 'T31'}), (b {id: 'T30'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T32'}), (b {id: 'T34'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T33'}), (b {id: 'T37'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T35'}), (b {id: 'T34'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T36'}), (b {id: 'T37'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T38'}), (b {id: 'T37'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T43'}), (b {id: 'T42'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T44'}), (b {id: 'T46'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T45'}), (b {id: 'T46'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T47'}), (b {id: 'T46'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T48'}), (b {id: 'T49'})
MERGE (a)-[r:Reason_Disease]->(b);

MATCH (a {id: 'T50'}), (b {id: 'T49'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T52'}), (b {id: 'T51'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T53'}), (b {id: 'T54'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T55'}), (b {id: 'T54'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T57'}), (b {id: 'T56'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T59'}), (b {id: 'T58'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T60'}), (b {id: 'T58'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T61'}), (b {id: 'T58'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T62'}), (b {id: 'T58'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T63'}), (b {id: 'T58'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T65'}), (b {id: 'T64'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T66'}), (b {id: 'T64'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T67'}), (b {id: 'T64'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T70'}), (b {id: 'T69'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T71'}), (b {id: 'T69'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T74'}), (b {id: 'T72'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T73'}), (b {id: 'T72'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T116'}), (b {id: 'T118'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T117'}), (b {id: 'T118'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T119'}), (b {id: 'T118'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T124'}), (b {id: 'T118'})
MERGE (a)-[r:Test_items_Disease]->(b);

MATCH (a {id: 'T123'}), (b {id: 'T118'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T120'}), (b {id: 'T118'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T121'}), (b {id: 'T118'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T122'}), (b {id: 'T118'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T127'}), (b {id: 'T147'})
MERGE (a)-[r:Test_items_Disease]->(b);

MATCH (a {id: 'T129'}), (b {id: 'T130'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T131'}), (b {id: 'T130'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T132'}), (b {id: 'T130'})
MERGE (a)-[r:Test_items_Disease]->(b);

MATCH (a {id: 'T139'}), (b {id: 'T138'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T142'}), (b {id: 'T140'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T142'}), (b {id: 'T141'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T148'}), (b {id: 'T147'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T155'}), (b {id: 'T153'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T156'}), (b {id: 'T153'})
MERGE (a)-[r:Frequency_Drug]->(b);

MATCH (a {id: 'T158'}), (b {id: 'T157'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T159'}), (b {id: 'T157'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T160'}), (b {id: 'T161'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T162'}), (b {id: 'T161'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T163'}), (b {id: 'T161'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T164'}), (b {id: 'T161'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T166'}), (b {id: 'T165'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T188'}), (b {id: 'T167'})
MERGE (a)-[r:Duration_Drug]->(b);

MATCH (a {id: 'T175'}), (b {id: 'T174'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T176'}), (b {id: 'T174'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T178'}), (b {id: 'T177'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T179'}), (b {id: 'T182'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T180'}), (b {id: 'T182'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T181'}), (b {id: 'T182'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T183'}), (b {id: 'T182'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T185'}), (b {id: 'T184'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T186'}), (b {id: 'T184'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T191'}), (b {id: 'T190'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T194'}), (b {id: 'T193'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T198'}), (b {id: 'T197'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T200'}), (b {id: 'T199'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T205'}), (b {id: 'T204'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T206'}), (b {id: 'T204'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T208'}), (b {id: 'T207'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T215'}), (b {id: 'T214'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T218'}), (b {id: 'T217'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T221'}), (b {id: 'T220'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T223'}), (b {id: 'T222'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T226'}), (b {id: 'T227'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T229'}), (b {id: 'T227'})
MERGE (a)-[r:Test_items_Disease]->(b);

MATCH (a {id: 'T230'}), (b {id: 'T228'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T233'}), (b {id: 'T232'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T235'}), (b {id: 'T234'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T237'}), (b {id: 'T236'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T246'}), (b {id: 'T249'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T247'}), (b {id: 'T249'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T248'}), (b {id: 'T249'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T250'}), (b {id: 'T249'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T256'}), (b {id: 'T255'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T257'}), (b {id: 'T255'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T262'}), (b {id: 'T261'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T263'}), (b {id: 'T261'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T267'}), (b {id: 'T266'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T268'}), (b {id: 'T266'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T269'}), (b {id: 'T266'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T270'}), (b {id: 'T266'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T271'}), (b {id: 'T266'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T272'}), (b {id: 'T266'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T273'}), (b {id: 'T266'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T274'}), (b {id: 'T266'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T275'}), (b {id: 'T266'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T282'}), (b {id: 'T283'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T284'}), (b {id: 'T283'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T285'}), (b {id: 'T294'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T286'}), (b {id: 'T294'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T287'}), (b {id: 'T288'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T289'}), (b {id: 'T288'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T291'}), (b {id: 'T290'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T292'}), (b {id: 'T290'})
MERGE (a)-[r:Test_items_Disease]->(b);

MATCH (a {id: 'T295'}), (b {id: 'T294'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T300'}), (b {id: 'T299'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T304'}), (b {id: 'T303'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T305'}), (b {id: 'T303'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T306'}), (b {id: 'T311'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T307'}), (b {id: 'T311'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T308'}), (b {id: 'T311'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T309'}), (b {id: 'T311'})
MERGE (a)-[r:Test_items_Disease]->(b);

MATCH (a {id: 'T312'}), (b {id: 'T311'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T313'}), (b {id: 'T311'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T330'}), (b {id: 'T331'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T335'}), (b {id: 'T336'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T341'}), (b {id: 'T342'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T354'}), (b {id: 'T345'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T350'}), (b {id: 'T345'})
MERGE (a)-[r:Test_items_Disease]->(b);

MATCH (a {id: 'T353'}), (b {id: 'T345'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T348'}), (b {id: 'T347'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T349'}), (b {id: 'T347'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T355'}), (b {id: 'T354'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T358'}), (b {id: 'T357'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T360'}), (b {id: 'T359'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T362'}), (b {id: 'T361'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T367'}), (b {id: 'T365'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T368'}), (b {id: 'T365'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T369'}), (b {id: 'T365'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T370'}), (b {id: 'T365'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T371'}), (b {id: 'T365'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T372'}), (b {id: 'T365'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T375'}), (b {id: 'T377'})
MERGE (a)-[r:ADE_Drug]->(b);

MATCH (a {id: 'T376'}), (b {id: 'T377'})
MERGE (a)-[r:Frequency_Drug]->(b);

MATCH (a {id: 'T378'}), (b {id: 'T379'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T380'}), (b {id: 'T379'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T382'}), (b {id: 'T381'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T384'}), (b {id: 'T383'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T386'}), (b {id: 'T385'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T387'}), (b {id: 'T385'})
MERGE (a)-[r:Pathogenesis_Disease]->(b);

MATCH (a {id: 'T388'}), (b {id: 'T389'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T390'}), (b {id: 'T389'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T398'}), (b {id: 'T400'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T399'}), (b {id: 'T400'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T401'}), (b {id: 'T400'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T402'}), (b {id: 'T400'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T417'}), (b {id: 'T400'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T404'}), (b {id: 'T403'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T409'}), (b {id: 'T410'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T411'}), (b {id: 'T410'})
MERGE (a)-[r:Class_Disease]->(b);

MATCH (a {id: 'T412'}), (b {id: 'T410'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T414'}), (b {id: 'T413'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T416'}), (b {id: 'T415'})
MERGE (a)-[r:Anatomy_Disease]->(b);

MATCH (a {id: 'T421'}), (b {id: 'T422'})
MERGE (a)-[r:Drug_Disease]->(b);

MATCH (a {id: 'T423'}), (b {id: 'T422'})
MERGE (a)-[r:Test_items_Disease]->(b);
